package com.kh.chap02_trycatch.controller;

import java.util.InputMismatchException;
import java.util.Scanner;

public class TryCatchController {
	
	
	/* try ~ catch 구문 : Exception이 발생한 곳에서 직접 처리하는 예외 처리 방법
	 * 
	 * - try : 예외가 발생할 가능성이 있는 코드를 try 블록{} 내에 넣고 시도
	 * 
	 * - catch : try 블록 내에서 발생하는 (던져지는 throws) Exception을 잡아내서 처리하는 방법을 기술
	 * 
	 * - finally : try~catch 수행 후 마지막으로 반드시 실행해야하는 코드를 작성하는 부분
	 * 
	 */
	
	public void method1() {
		// Scanner를 이용하여 입력된 두 수 나누기
		Scanner sc = new Scanner(System.in);
		
		try {
			System.out.println("입력된 두 수 나누기");
			System.out.print("입력 1 : ");
			int num1 = sc.nextInt();
			System.out.print("입력 2 : ");
			int num2 = sc.nextInt();
			
			System.out.println("입력1/입력2 : " + num1/num2);
			
		} catch (ArithmeticException e) {
			System.out.println("0으로 나눌수는 없습니다");
		} catch (InputMismatchException e) {
			// catch 구문은 여러개 작성 가능함.
			// 단, 여러 개 작성 시 상속 관계를 고려해야 함..!
			System.out.println("잘못 입력하셨습니다. 정수만 입력해주세요");
		} catch (Exception e) { // 모든 exception의 조상인 Exception 클래스를 작성
			System.out.println("예외 상황 발생");
		}
	}

}
