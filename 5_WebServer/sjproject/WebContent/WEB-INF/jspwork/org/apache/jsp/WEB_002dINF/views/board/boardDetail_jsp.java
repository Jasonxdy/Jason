/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.50
 * Generated at: 2020-01-23 08:02:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.kh.sjproject.board.model.vo.Attachment;
import java.util.ArrayList;
import com.kh.sjproject.board.model.vo.Board;
import com.kh.sjproject.member.model.vo.Member;

public final class boardDetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/views/board/../common/header.jsp", Long.valueOf(1579072788335L));
    _jspx_dependants.put("/WEB-INF/views/board/../common/footer.jsp", Long.valueOf(1578635194787L));
    _jspx_dependants.put("/WEB-INF/views/board/../common/nav.jsp", Long.valueOf(1579570150627L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.kh.sjproject.member.model.vo.Member");
    _jspx_imports_classes.add("com.kh.sjproject.board.model.vo.Attachment");
    _jspx_imports_classes.add("com.kh.sjproject.board.model.vo.Board");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	Board board = (Board) request.getAttribute("board");
	ArrayList<Attachment> files = (ArrayList<Attachment>) request.getAttribute("files");

	String currentPage = request.getParameter("currentPage");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>게시글</title>\r\n");
      out.write("<style>\r\n");
      out.write("#board-area {\r\n");
      out.write("\tmargin-bottom: 100px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#board-content {\r\n");
      out.write("\tpadding-bottom: 150px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".boardImgArea {\r\n");
      out.write("\theight: 300px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".boardImg {\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\theight: 100%;\r\n");
      out.write("\tmax-width: 300px;\r\n");
      out.write("\tmax-height: 300px;\r\n");
      out.write("\tmargin: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 이미지 화살표 색 조정\r\n");
      out.write("\t-> fill='%23000' 부분의 000을\r\n");
      out.write("\t   RGB 16진수 값을 작성하여 변경 가능 \r\n");
      out.write("\t */\r\n");
      out.write(".carousel-control-prev-icon {\r\n");
      out.write("\tbackground-image:\r\n");
      out.write("\t\turl(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23000' viewBox='0 0 8 8'%3E%3Cpath d='M5.25 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.5-1.5z'/%3E%3C/svg%3E\")\r\n");
      out.write("\t\t!important;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".carousel-control-next-icon {\r\n");
      out.write("\tbackground-image:\r\n");
      out.write("\t\turl(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23000' viewBox='0 0 8 8'%3E%3Cpath d='M2.75 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-4-4-4z'/%3E%3C/svg%3E\")\r\n");
      out.write("\t\t!important;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".replyWrite>table {\r\n");
      out.write("\twidth: 90%;\r\n");
      out.write("\talign: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#replyContentArea {\r\n");
      out.write("\twidth: 90%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#replyContentArea>textarea {\r\n");
      out.write("\tresize: none;\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#replyBtnArea {\r\n");
      out.write("\twidth: 100px;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".rWriter {\r\n");
      out.write("\tmargin-right: 30px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".rDate {\r\n");
      out.write("\tfont-size: 0.7em;\r\n");
      out.write("\tcolor: gray;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#replyListArea {\r\n");
      out.write("\tlist-style-type: none;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\r\n");

	String msg = (String)session.getAttribute("msg");
	Member loginMember = (Member)session.getAttribute("loginMember");
	
	// C6) 쿠키 사용을 위한 변수 생성
	boolean save = false; // 아이디 저장 체크박스 값을 수정하기 위한 변수
	String saveId = ""; // 쿠키에 저장된 saveId라는 키가 가지고 있는 값을 저장할 변수
	Cookie[] cookies = request.getCookies(); //  전달받은 쿠키 저장 (key:value 값으로 ??)
	
	// 서버 첫 시작시 request.getCookies()의 값이 null
	// -> if문으로 처리하지 않는 경우 페이지 로딩 시 NullPointerException이 발생됨
	if(cookies != null) {
		
		for(Cookie c : cookies) {
			// 쿠키 객체에서 name을 얻어와 그 값이 "saveId"와 같은지 비교
			//			== key, 속성 
			if(c.getName().equals("saveId")){
				saveId = c.getValue();
				save = true;
			}
		}
	}
	

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta charset=\"UTF-8\">\r\n");
      out.write("\t<meta name=\"viewport\"\r\n");
      out.write("\t\tcontent=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("\t<link rel=\"stylesheet\"\r\n");
      out.write("\t\thref=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\r\n");
      out.write("\t\tintegrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\"\r\n");
      out.write("\t\tcrossorigin=\"anonymous\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t// 로그인 실패 메세지 출력 후 session에 남아있는 \"msg\" 속성 제거\r\n");
      out.write("\t\t");
 if(msg != null){ 
      out.write("// 로그인이 실패한 경우\r\n");
      out.write("\t\t\talert(\"");
      out.print(msg);
      out.write("\");\t\t\t\t\r\n");
      out.write("\t\t");
}
		session.removeAttribute("msg");
		
      out.write("\r\n");
      out.write("\t</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<header class=\"blog-header\">\r\n");
      out.write("\t\t<div\r\n");
      out.write("\t\t\tclass=\"row flex-nowrap justify-content-between align-items-center\">\r\n");
      out.write("\t\t\t<div class=\"col-4 pt-1\">\r\n");
      out.write("\t\t\t\t<a class=\"text-muted\" href=\"");
      out.print( request.getContextPath());
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<!-- 서버 ip: 8080/sjproject 반환 // 현재 프로젝트의 최상위 주소가 나옴(?) -->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<!-- request: 내장객체이므로 사용가능 -->\t\t\t\t\t\t\t\t\t\t\t\t \r\n");
      out.write("\t\t\t\t<img src=\"https://www.iei.or.kr/resources/images/common/top_logo.jpg\"\r\n");
      out.write("\t\t\t\t\theight=\"60px\">\r\n");
      out.write("\t\t\t\t</a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t");
 if (loginMember == null) { 
      out.write("\r\n");
      out.write("\t\t\t<div class=\"col-4 d-flex justify-content-end align-items-center\">\r\n");
      out.write("\t\t\t\t<a id=\"modal-120930\" href=\"#modal-container-120930\" role=\"button\"\r\n");
      out.write("\t\t\t\t\tclass=\"btn btn-sm btn-outline-secondary\" data-toggle=\"modal\">로그인</a>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"modal fade\" id=\"modal-container-120930\" role=\"dialog\"\r\n");
      out.write("\t\t\t\t\taria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("\t\t\t\t\t<div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<h5 class=\"modal-title\" id=\"myModalLabel\">로그인 모달창</h5>\r\n");
      out.write("\t\t\t\t\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<span aria-hidden=\"true\">×</span>\r\n");
      out.write("\t\t\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<!-- action의 주소 : 완전 임의로 지정 가능한듯? -->\r\n");
      out.write("\t\t\t\t\t\t\t\t<form class=\"form-signin\" method=\"POST\" action=\"");
      out.print( request.getContextPath());
      out.write("/member/login.do\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tonsubmit=\"return loginValidate();\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"memberId\" name=\"memberId\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tplaceholder=\"아이디\" value=");
      out.print( saveId );
      out.write("> <br> \r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input type=\"password\" class=\"form-control\" id=\"memberPwd\" name=\"memberPwd\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tplaceholder=\"비밀번호\"> <br>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"checkbox mb-3\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<label> <input type=\"checkbox\" id=\"save\" name=\"save\" ");
      out.print( save ? "checked" : "" );
      out.write("> 아이디 저장\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">로그인</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<a class=\"btn btn-lg btn-secondary btn-block\" href=\"");
      out.print( request.getContextPath() );
      out.write("/member/signUpForm.do\">회원가입</a>\r\n");
      out.write("\t\t\t\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-secondary\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\">Close</button>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t");
 } else {
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"d-flex justify-content-end align-items-center\">\r\n");
      out.write("\t\t\t\t\t");
      out.print( loginMember.getMemberName() );
      out.write("님 환영합니다.&nbsp;\r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print( request.getContextPath() );
      out.write("/member/mypage.do\" role=\"button\" class=\"btn btn-sm btn-outline-secondary\">\r\n");
      out.write("\t\t\t\t\t\t마이페이지\r\n");
      out.write("\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t&nbsp;\r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print( request.getContextPath() );
      out.write("/member/Logout.do\" role=\"button\" class=\"btn btn-sm btn-outline-secondary\">\r\n");
      out.write("\t\t\t\t\t\t로그아웃\r\n");
      out.write("\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</header>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\r\n");
      out.write("\t\t// 로그인 유효성 검사\r\n");
      out.write("\t\tfunction loginValidate(){\r\n");
      out.write("\t\t\t// trim() : 문자열 앞뒤 공백 제거\r\n");
      out.write("\t\t\tif($(\"#memberId\").val().trim().length == 0) {\r\n");
      out.write("\t\t\t\talert(\"아이디를 입력하세요\");\r\n");
      out.write("\t\t\t\t$(\"#memberId\").focus();\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t// form태그 기본 동작 속성 제거\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif($(\"#memberPwd\").val().trim().length == 0) {\r\n");
      out.write("\t\t\t\talert(\"비밀번호를 입력하세요\");\r\n");
      out.write("\t\t\t\t$(\"#memberPwd\").focus();\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t// form태그 기본 동작 속성 제거\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\treturn true;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"\r\n");
      out.write("\t\tintegrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\"\r\n");
      out.write("\t\tcrossorigin=\"anonymous\"></script>\r\n");
      out.write("\t<script\r\n");
      out.write("\t\tsrc=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\"\r\n");
      out.write("\t\tintegrity=\"sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo\"\r\n");
      out.write("\t\tcrossorigin=\"anonymous\"></script>\r\n");
      out.write("\t<script\r\n");
      out.write("\t\tsrc=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\"\r\n");
      out.write("\t\tintegrity=\"sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6\"\r\n");
      out.write("\t\tcrossorigin=\"anonymous\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <nav class=\"nav-scroller py-1 mb-2\">\r\n");
      out.write("      <ul class=\"nav justify-content-center\">\r\n");
      out.write("        <li class=\"nav-item col-md text-center\">\r\n");
      out.write("          <a class=\"nav-link active\" href=\"");
      out.print( request.getContextPath());
      out.write("/notice/list\">공지사항</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item col-md text-center\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"");
      out.print( request.getContextPath());
      out.write("/board/list\">게시판</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item col-md text-center\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"#\">Q & A</a>\r\n");
      out.write("        </li>\r\n");
      out.write("      </ul>\r\n");
      out.write("    </nav>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div id=\"board-area\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<!-- Category -->\r\n");
      out.write("\t\t\t\t<h6 class=\"mt-4\">\r\n");
      out.write("\t\t\t\t\t카테고리 : [");
      out.print(board.getBoardCategory());
      out.write("]\r\n");
      out.write("\t\t\t\t</h6>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<!-- Title -->\r\n");
      out.write("\t\t\t\t<h3 class=\"mt-4\">");
      out.print(board.getBoardTitle());
      out.write("</h3>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<!-- Writer -->\r\n");
      out.write("\t\t\t\t<p class=\"lead\">\r\n");
      out.write("\t\t\t\t\t작성자 :\r\n");
      out.write("\t\t\t\t\t");
      out.print(board.getBoardWriter());
      out.write("\r\n");
      out.write("\t\t\t\t</p>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<hr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<!-- Date -->\r\n");
      out.write("\t\t\t\t<p>\r\n");
      out.write("\t\t\t\t\t");
      out.print(board.getBoardModifyDate());
      out.write("\r\n");
      out.write("\t\t\t\t\t<span class=\"float-right\">조회수 ");
      out.print(board.getBoardCount());
      out.write("</span>\r\n");
      out.write("\t\t\t\t</p>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<hr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t");

					if (files != null) {
				
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"carousel slide m-3\" id=\"carousel-325626\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"carousel-inner boardImgArea\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t");

							for (int i = 0; i < files.size(); i++) {
									String src = request.getContextPath() + "/resources/uploadImages/"
											+ files.get(i).getFileChangeName();

									String imgClass = "carousel-item";
									if (i == 0)
										imgClass += " active";
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<div class=\"");
      out.print(imgClass);
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t<img class=\"d-block w-100 boardImg\" src=\"");
      out.print(src);
      out.write("\" /> <input\r\n");
      out.write("\t\t\t\t\t\t\t\ttype=\"hidden\" value=");
      out.print(files.get(i).getFileNo());
      out.write(">\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t");

							}
						
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<a class=\"carousel-control-prev\" href=\"#carousel-325626\"\r\n");
      out.write("\t\t\t\t\t\tdata-slide=\"prev\"><span class=\"carousel-control-prev-icon\"></span>\r\n");
      out.write("\t\t\t\t\t\t<span class=\"sr-only\">Previous</span></a> <a\r\n");
      out.write("\t\t\t\t\t\tclass=\"carousel-control-next\" href=\"#carousel-325626\"\r\n");
      out.write("\t\t\t\t\t\tdata-slide=\"next\"><span class=\"carousel-control-next-icon\"></span>\r\n");
      out.write("\t\t\t\t\t\t<span class=\"sr-only\">Next</span></a>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t");

					}
				
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<!-- Content -->\r\n");
      out.write("\t\t\t\t<div id=\"board-content\">");
      out.print(board.getBoardContent());
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<hr>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t");

						if (loginMember != null && (board.getBoardWriter().equals(loginMember.getMemberId()))) {
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<a href=\"delete?no=\" class=\"btn btn-primary float-right\">삭제</a> <a\r\n");
      out.write("\t\t\t\t\t\thref=\"updateForm?no=\"\r\n");
      out.write("\t\t\t\t\t\tclass=\"btn btn-primary float-right ml-1 mr-1\">수정</a>\r\n");
      out.write("\t\t\t\t\t");

						}
					
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<a href=\"list?currnetPage=");
      out.print(currentPage);
      out.write("\"\r\n");
      out.write("\t\t\t\t\t\tclass=\"btn btn-primary float-right\">목록으로</a>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<hr>\r\n");
      out.write("\t\t\t<div id=\"reply-area \">\r\n");
      out.write("\t\t\t\t<!-- 댓글 출력 부분 -->\r\n");
      out.write("\t\t\t\t<div class=\"replyList\">\r\n");
      out.write("\t\t\t\t\t<ul id=\"replyListArea\">\r\n");
      out.write("\t\t\t\t\t\t<li class=\"reply-row\" id=\"1\"><span class=\"rWriter\">작성자</span>\r\n");
      out.write("\t\t\t\t\t\t\t<span class=\"rDate\">2020.01.23</span>\r\n");
      out.write("\t\t\t\t\t\t\t<p class=\"rContent\">댓글 내용</p></li>\r\n");
      out.write("\t\t\t\t\t\t<hr>\r\n");
      out.write("\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<!-- 댓글 작성 영역 -->\r\n");
      out.write("\t\t\t\t<div class=\"replyWrite\">\r\n");
      out.write("\t\t\t\t\t<table align=\"center\">\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td id=\"replyContentArea\"><textArea rows=\"2\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tid=\"replyContent\"></textArea></td>\r\n");
      out.write("\t\t\t\t\t\t\t<td id=\"replyBtnArea\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<button class=\"btn btn-primary\" id=\"addReply\">댓글등록</button>\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <footer class=\"text-muted\" >\r\n");
      out.write("      <div class=\"container\">\r\n");
      out.write("        <p class=\"float-right\">\r\n");
      out.write("          <a href=\"#\">Back to top</a>\r\n");
      out.write("        </p>\r\n");
      out.write("        <p>Album example is &copy; Bootstrap, but please download and customize it for yourself!</p>\r\n");
      out.write("        <p>New to Bootstrap? <a href=\"{{ site.url }}/\">Visit the homepage</a> or read our <a href=\"{{ site.baseurl }}/docs/{{ site.docs_version }}/getting-started/introduction/\">getting\r\n");
      out.write("            started guide</a>.</p>\r\n");
      out.write("      </div>\r\n");
      out.write("    </footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t$(\"#deleteBtn\").on(\"click\",function(){\r\n");
      out.write("\t\t\tif(confirm(\"정말 삭제 하시겠습니까?\")) location.href = \"delete?no=\";\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 이미지 클릭 시 다운로드\r\n");
      out.write("\t\t$(\".boardImg\").on(\"click\",function(){\r\n");
      out.write("\t\t\tvar fNo = $(this).next().val();\r\n");
      out.write("\t\t\tlocation.href=\"");
      out.print(request.getContextPath());
      out.write("/board/download?fNo=\"+fNo;\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 댓글 등록 버튼 동작\r\n");
      out.write("\t\t$(\"#addReply\").on(\"click\", function(){\r\n");
      out.write("\t\t\tvar writer;\r\n");
      out.write("\t\t\t// 로그인 검사 필요\r\n");
      out.write("\t\t\tvar boardNo = ");
      out.print(board.getBoardNo());
      out.write(";\r\n");
      out.write("\t\t\tvar content = $(\"#replyContent\").val();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// 로그인 검사\r\n");
      out.write("\t\t\t");
if (loginMember == null) {
      out.write("\r\n");
      out.write("\t\t\t\talert(\"로그인 후 이용해 주세요\");\r\n");
      out.write("\t\t\t");
} else {
      out.write("\r\n");
      out.write("\t\t\t\twriter = \"");
      out.print(loginMember.getMemberNo());
      out.write("\";\r\n");
      out.write("\r\n");
      out.write("\t\t\t$.ajax({ // ajax 시작함\r\n");
      out.write("\t\t\t\turl : \"insertReply\", // URL은 ajax 사용 시 필수 속성\r\n");
      out.write("\t\t\t\ttype : \"post\", // filter 만들어 두어서 자유롭게 인코딩 생각 안하고 사용 가능\r\n");
      out.write("\t\t\t\tdata : {\r\n");
      out.write("\t\t\t\t\twriter : writer,\r\n");
      out.write("\t\t\t\t\tcontent : content,\r\n");
      out.write("\t\t\t\t\tboardNo : boardNo\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\t/*  key:value */\r\n");
      out.write("\t\t\t\t// 객체 형태로 데이터 넘김\r\n");
      out.write("\t\t\t\t// cf> 이때 data 안에 자바스크립트의 객체 형태로 문자열이 전달되는 경우 : JSON임\r\n");
      out.write("\t\t\t\tsuccess : function(result) {\r\n");
      out.write("\t\t\t\t\tif (result > 0) {\r\n");
      out.write("\t\t\t\t\t\t$(\"#replyContent\").val(\"\");\r\n");
      out.write("\t\t\t\t\t\tselectRlist();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\talert(\"댓글 등록 실패\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror : function() {\r\n");
      out.write("\t\t\t\t\tconsole.log(\"ajax 통신 실패 ㅠㅠ\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t");
}
      out.write("\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t// 댓글 출력 함수\r\n");
      out.write("\t\tfunction selectRlist() {\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar boardNo = ");
      out.print(board.getBoardNo());
      out.write(";\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl : \"selectReplyList\",\r\n");
      out.write("\t\t\t\ttype : \"POST\",\r\n");
      out.write("\t\t\t\tdataType : \"json\",\r\n");
      out.write("\t\t\t\tdata : {boardNo : boardNo},\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tsuccess : function(rList) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar $replyListArea = $(\"#replyListArea\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t$replyListArea.html(\"\"); // 기존 내용 삭제\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t$.each(rList, function(i) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t/* HTML 반복적으로 뽑아내는 방법! */\r\n");
      out.write("\t\t\t\t\t\tvar $li = $(\"<li>\"); // == <li></li>을 의미\r\n");
      out.write("\t\t\t\t\t\tvar $rWriter = $(\"<span>\").prop(\"class\", \"rWriter\")\r\n");
      out.write("\t\t\t\t\t\t\t\t.html(rList[i].replyWriter); // class 속성을 추가하는데 그 속성값\r\n");
      out.write("\t\t\t\t\t\tvar $rDate = $(\"<span>\").prop(\"class\", \"rDate\").html(\r\n");
      out.write("\t\t\t\t\t\t\t\trList[i].replyModifyDate);\r\n");
      out.write("\t\t\t\t\t\tvar $rContent = $(\"<p>\").prop(\"class\", \"rContent\")\r\n");
      out.write("\t\t\t\t\t\t\t\t.html(rList[i].replyContent);\r\n");
      out.write("\t\t\t\t\t\tvar $hr = $(\"<hr>\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t$li.append($rWriter).append($rDate).append($rContent);\r\n");
      out.write("\t\t\t\t\t\t// .append : 선택된 요소의 태그 안쪽에 작성됨\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t$replyListArea.append($li).append($hr);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror : function () {\r\n");
      out.write("\t\t\t\t\tconsole.log(\"ajax 연결 실패\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(function(){\r\n");
      out.write("\t\t\tselectRlist();\r\n");
      out.write("\t\t\t// 화면이 로딩 됏을때 바로 selectRlist()를 실행해라!\r\n");
      out.write("\t\t});\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
